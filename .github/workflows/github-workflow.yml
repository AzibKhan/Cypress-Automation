name: Cypress Tests (Docker)

on:
  push:
    branches: [ main, master, test ]
  pull_request:
    branches: [ main, master, test ]
  workflow_dispatch:

jobs:
  cypress-docker:
    name: Cypress Docker Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
          fail-on-cache-miss: false

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: cypress-tests:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            CYPRESS_VERSION=14.3.2

      - name: Move cache
        run: |
          sudo rm -rf /tmp/.buildx-cache
          sudo mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          sudo chmod -R 777 /tmp/.buildx-cache

      - name: Create reports directory
        run: |
          mkdir -p cypress/reports/mochawesome
          mkdir -p cypress/reports/mochawesome/.jsons
          mkdir -p cypress/screenshots
          mkdir -p cypress/videos
          chmod -R 777 cypress

      - name: Run Cypress tests
        env:
          CYPRESS_EMAIL: ${{ secrets.CYPRESS_EMAIL }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
          CYPRESS_BASE_URL: https://app.pipedrive.com
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/e2e \
            -e CYPRESS_EMAIL=${{ secrets.CYPRESS_EMAIL }} \
            -e CYPRESS_PASSWORD=${{ secrets.CYPRESS_PASSWORD }} \
            -e CYPRESS_BASE_URL=https://app.pipedrive.com \
            cypress-tests:latest

      - name: Fix permissions
        run: |
          sudo chown -R $USER:$USER cypress
          chmod -R 777 cypress

      - name: Generate Mochawesome report
        if: always()
        run: |
          echo "Current directory structure:"
          find cypress -type d
          echo -e "\nGenerating reports..."
          if [ -z "$(find cypress/reports/mochawesome/.jsons/ -name '*.json')" ]; then
            echo "No reports found to merge."
            exit 1
          fi
          npm run merge:reports || echo "Failed to merge reports"
          npm run generate:report || echo "Failed to generate report"
          echo -e "\nReport directory contents:"
          ls -R cypress/reports/mochawesome

      - name: Upload Mochawesome Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report
          path: cypress/reports/mochawesome
          retention-days: 5
          if-no-files-found: warn

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 5
          if-no-files-found: warn

      - name: Upload Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 5
          if-no-files-found: warn

  quick-test:
    name: Quick Docker Test
    runs-on: ubuntu-latest
    needs: cypress-docker
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          docker --version
          docker-compose --version

      - name: Test Docker Build
        run: |
          docker build -t cypress-test .
          docker images | grep cypress-test

      - name: Test Docker Run
        run: |
          docker run --rm cypress-test npx cypress --version 